#MEDIUM#


	You are given a triangle of integers (N rows, and M columns in the M<sup>th</sup> row). Your current task is to find the maximal sum of triangle's integers possible, by traversing the triangle according to the following rules:

1) You must start from the integer [1,1] (first row, first column).

2) Every next step you take, must be to the row immediately below the current row.

3) You can choose the next step's column as the current one, or the next one.

   i,e.

   If you are at the current integer [i,j], the next step can be:

   [i+1, j]

   or

   [i+1, j+1]

   (move 'down' or 'down & right')

4) You must reach till the last row N.


       One or more optimal path(s) from [1,1] to the last row N exist, and it(they) yields the maximum possible sum of triangle elements. Find and answer the LCC Server, the maximum sum for each input it provides you.



INPUT:

First line of the input contains an integer T (1 <= T <= 10)
T test cases follow.

Each test case starts with a line indicating the triangle size N (1 <= N <= 100)
N rows follow

Each row 'i' consists of 'i' space separated integers.



OUTPUT:

T lines of integers, which denote the maximum sum for each test case triangle.



EXAMPLE:


Input:

2
3
6
2 5
3 9 4
4
1
3 2
4 9 10
7 12 9 10


Output:

20
25



EXPLANATION:

2 Test cases


(test case 1)
triangle size = 3

optimal path:

[1,1] -> [2,2] -> [3,2]

6 + 5 + 9 = 20


(test case 2)
triangle size = 4

optimal path:

[1,1] -> [2,1] -> [3,2] -> [4,2]

1 + 3 + 9 + 12 = 25